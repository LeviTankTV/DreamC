(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&e(o)}).observe(document,{childList:!0,subtree:!0});function i(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(s){if(s.ep)return;s.ep=!0;const a=i(s);fetch(s.href,a)}})();class C{constructor(){this.app=null,this.ws=null,this.gameState={players:{},mobs:{},myId:null,worldSize:34e3,worldHeight:3e3,petalDrops:{}},this.worldContainer=null,this.petalsContainer=null,this.petalDropContainer=null,this.playersContainer=null,this.playerOverlayContainer=null,this.minimapContainer=null,this.portalsContainer=null,this.gridGraphics=null,this.worldBorder=null,this.mobsContainer=null,this.mobSprites={},this.mobTextures={},this.playerRadius=15,this.keys={},this.camera={x:0,y:0},this.gameLoopInterval=null,this.lastUpdateTime=0,this.fps=60,this.frameTime=1e3/this.fps,this.lastFrameTime=0,this.playerTexture=null,this.deadPlayerTexture=null,this.playerSprites={},this.portalTextures={},this.portalSprites={},this.portalAnimations={},this.petalTextures={},this.petalSprites={},this.petalDropSprites={},this.authToken=localStorage.getItem("authToken"),this.username=localStorage.getItem("username"),this.zones={common:{x:0,width:6e3,height:3e3,color:6710886,name:"Common Zone"},uncommon:{x:7e3,width:6e3,height:3e3,color:65280,name:"Uncommon Zone"},rare:{x:14e3,width:6e3,height:3e3,color:35071,name:"Rare Zone"},epic:{x:21e3,width:6e3,height:3e3,color:16711935,name:"Epic Zone"},legendary:{x:28e3,width:6e3,height:3e3,color:16755200,name:"Legendary Zone"}},this.portals=[{id:"P1",x:5800,y:1500,zone:"common"},{id:"P2",x:7200,y:1500,zone:"uncommon"},{id:"P3",x:12800,y:1500,zone:"uncommon"},{id:"P4",x:14200,y:1500,zone:"rare"},{id:"P5",x:19800,y:1500,zone:"rare"},{id:"P6",x:21200,y:1500,zone:"epic"},{id:"P7",x:26800,y:1500,zone:"epic"},{id:"P8",x:28200,y:1500,zone:"legendary"}],this.collisionEffects={},this.collisionParticles=[],this.lastCollisionTime=0,this.collisionCooldown=500,this.mobInterpolationData={},this.lastServerUpdate=0,this.controlsEnabled=!0,this.health=100,this.maxHealth=100,this.zoomLevel=1,this.diagnostics={lastStateUpdate:0,stateUpdateCount:0,lastPlayersCount:0,lastMobsCount:0,renderErrors:0,wsMessagesReceived:0}}setupDiagnostics(){setInterval(()=>{this.runDiagnostics()},5e3)}runDiagnostics(){var e,s;const t=this.gameState.players[this.gameState.myId],i=Date.now();console.group("🎯 Game Client Diagnostics"),console.log("Last state update:",i-this.diagnostics.lastStateUpdate+"ms ago"),console.log("State updates:",this.diagnostics.stateUpdateCount),console.log("WS messages:",this.diagnostics.wsMessagesReceived),console.log("Players in state:",Object.keys(this.gameState.players).length),console.log("Mobs in state:",Object.keys(this.gameState.mobs).length),console.log("Player sprites:",Object.keys(this.playerSprites).length),console.log("Mob sprites:",Object.keys(this.mobSprites).length),console.log("My player exists:",!!t),console.log("My player zone:",t==null?void 0:t.currentZone),console.log("WebSocket state:",(e=this.ws)==null?void 0:e.readyState),console.log("Render errors:",this.diagnostics.renderErrors),console.log("Camera position:",this.camera),console.log("World container scale:",(s=this.worldContainer)==null?void 0:s.scale.x),console.groupEnd(),this.diagnostics.lastStateUpdate>0&&i-this.diagnostics.lastStateUpdate>1e4&&(console.warn("⚠️ No state updates for 10+ seconds, attempting recovery..."),this.attemptRecovery())}attemptRecovery(){if(!this.ws||this.ws.readyState!==WebSocket.OPEN){console.log("🔌 Reconnecting WebSocket..."),this.reconnect();return}console.log("🔄 Requesting state refresh..."),this.ws.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"ping"})),this.forceRedraw()}forceRedraw(){console.log("🎨 Forcing redraw..."),this.clearAllSprites(),this.gameState.players[this.gameState.myId]&&this.drawWorld()}clearAllSprites(){Object.values(this.playerSprites).forEach(t=>{this.playersContainer.removeChild(t)}),this.playerSprites={},Object.values(this.mobSprites).forEach(t=>{this.mobsContainer.removeChild(t)}),this.mobSprites={}}async init(){const t=document.getElementById("loadingOverlay");t&&t.classList.remove("hidden"),await this.setupPixiApp(),this.setupControls(),this.setupAuthHandlers(),this.authToken&&this.username?(document.getElementById("authOverlay").style.display="none",document.getElementById("main-menu").style.display="flex"):(this.showAuth(),document.getElementById("main-menu").style.display="none"),console.log("Game client initialized with Pixi.js"),setTimeout(()=>{t&&(t.classList.add("hidden"),setTimeout(()=>{t.parentNode&&(t.style.display="none")},400))},1e3)}async setupPixiApp(){try{this.app=new PIXI.Application,await this.app.init({width:window.innerWidth,height:window.innerHeight,backgroundColor:0,resolution:window.devicePixelRatio||1,autoDensity:!0,antialias:!0,transparent:!0}),document.getElementById("pixi-container").appendChild(this.app.canvas),this.playerTexture=await PIXI.Assets.load("assets/fl.png"),this.deadPlayerTexture=await PIXI.Assets.load("assets/fl_dead.png"),await this.loadPortalTextures(),this.worldContainer=new PIXI.Container,this.mobsContainer=new PIXI.Container,this.playersContainer=new PIXI.Container,this.playerOverlayContainer=new PIXI.Container,this.minimapContainer=new PIXI.Container,this.portalsContainer=new PIXI.Container,this.petalsContainer=new PIXI.Container,this.petalDropContainer=new PIXI.Container,this.app.stage.addChild(this.worldContainer),this.app.stage.addChild(this.playerOverlayContainer),this.worldContainer.addChild(this.portalsContainer),this.worldContainer.addChild(this.playersContainer),this.worldContainer.addChild(this.mobsContainer),this.worldContainer.addChild(this.petalsContainer),this.worldContainer.addChild(this.petalDropContainer),this.setupUIContainer(),this.drawFixedGrid(),this.setupMinimap(),this.createPortals(),await this.loadMobTextures(),await this.loadPetalTextures(),window.addEventListener("resize",()=>this.resizeApp()),console.log("PixiJS application initialized with zones and portals")}catch(t){throw console.error("Failed to initialize PixiJS:",t),t}}updatePlayerOverlays(){if(!this.gameState.players[this.gameState.myId])return;const i=this.getVisibleArea(),e=new Set;Object.values(this.gameState.players).forEach(s=>{var f,w;if(!this.isObjectVisible(s,i))return;const a=`overlay_${s.id}`;e.add(a);let o=(f=this.playerOverlays)==null?void 0:f[a];if(!o){const u=new PIXI.Text("",{fontFamily:"Arial",fontSize:16,fill:16777215,stroke:0,strokeThickness:4,fontWeight:"bold"});u.anchor.set(.5);const x=new PIXI.Graphics,b=new PIXI.Graphics;o={nameText:u,healthBg:x,healthFill:b},this.playerOverlayContainer.addChild(u,x,b),this.playerOverlays||(this.playerOverlays={}),this.playerOverlays[a]=o}if(s.health<=0){o.nameText.visible=!1,o.healthBg.visible=!1,o.healthFill.visible=!1;return}o.nameText.visible=!0,o.healthBg.visible=!0,o.healthFill.visible=!0;let n=s.username||`Player_${(w=s.id)==null?void 0:w.substring(0,4)}`;s.id===this.gameState.myId?(n+=" (You)",o.nameText.style.fill=65280):o.nameText.style.fill=16777215,o.nameText.text=n;const r=60,h=8,l=4,p=Math.max(0,s.health/(s.max_health||100));o.healthBg.clear(),o.healthBg.beginFill(2236962).drawRoundedRect(-r/2,0,r,h,l).endFill(),o.healthBg.lineStyle(2,0,1).drawRoundedRect(-r/2,0,r,h,l),o.healthFill.clear();const c=p>.6?5025616:p>.3?16750592:16007990,m=r*p;m>0&&o.healthFill.beginFill(c).drawRoundedRect(-r/2,0,m,h,l).endFill();const d=this.worldToScreen(s.x,s.y);o.nameText.x=d.x,o.nameText.y=d.y-35;const y=d.y+25;o.healthBg.x=d.x,o.healthBg.y=y,o.healthFill.x=d.x,o.healthFill.y=y}),this.playerOverlays&&Object.keys(this.playerOverlays).forEach(s=>{if(!e.has(s)){const a=this.playerOverlays[s];this.playerOverlayContainer.removeChild(a.nameText,a.healthBg,a.healthFill),delete this.playerOverlays[s]}})}worldToScreen(t,i){const e=t*this.zoomLevel+this.camera.x,s=i*this.zoomLevel+this.camera.y;return{x:e,y:s}}getVisibleArea(){const t=this.gameState.players[this.gameState.myId];if(!t)return{x:0,y:0,width:0,height:0};const i=this.app.screen.width/this.zoomLevel,e=this.app.screen.height/this.zoomLevel;return{x:t.x-i/2-100,y:t.y-e/2-100,width:i+200,height:e+200}}async loadPortalTextures(){const t=[];for(let i=1;i<=8;i++)t.push(PIXI.Assets.load(`assets/portal/Portalf${i}.png`).then(e=>{this.portalTextures[`frame${i}`]=e}));await Promise.all(t),console.log("All portal textures loaded")}createPortals(){this.portals.forEach(t=>{const i=[];for(let n=1;n<=8;n++)i.push(this.portalTextures[`frame${n}`]);const e=new PIXI.AnimatedSprite(i);e.anchor.set(.5),e.x=t.x,e.y=t.y;const a=200/Math.max(e.width,e.height);e.scale.set(a),e.animationSpeed=.3,e.play(),this.portalSprites[t.id]=e,this.portalsContainer.addChild(e);const o=new PIXI.Text(t.id,{fontFamily:"Arial",fontSize:16,fill:16777215,align:"center",stroke:0,strokeThickness:4});o.anchor.set(.5),o.y=-80,e.addChild(o)})}setupWorldVisuals(){this.worldBorderElement=document.createElement("div"),this.worldBorderElement.className="world-border",document.getElementById("game-container").appendChild(this.worldBorderElement)}drawWorldSquare(){this.worldBorder&&this.worldContainer.removeChild(this.worldBorder),this.worldBorder=new PIXI.Graphics,Object.values(this.zones).forEach(t=>{this.worldBorder.beginFill(t.color,.3),this.worldBorder.drawRect(t.x,0,t.width,this.gameState.worldHeight),this.worldBorder.endFill(),this.worldBorder.lineStyle(12,16711680,.9),this.worldBorder.drawRect(t.x,0,t.width,this.gameState.worldHeight)}),this.worldBorder.lineStyle(12,16711680,1),this.worldBorder.drawRect(0,0,this.gameState.worldSize,this.gameState.worldHeight),this.worldContainer.addChildAt(this.worldBorder,0),this.drawZoneLabels()}drawZoneLabels(){this.zoneLabels&&this.zoneLabels.forEach(t=>this.worldContainer.removeChild(t)),this.zoneLabels=[],Object.values(this.zones).forEach(t=>{const i=new PIXI.Text(t.name,{fontFamily:"Arial",fontSize:24,fill:16777215,align:"center",stroke:0,strokeThickness:4});i.anchor.set(.5),i.x=t.x+t.width/2,i.y=50,this.worldContainer.addChild(i),this.zoneLabels.push(i)})}drawFixedGrid(){this.fixedGrid&&this.app.stage.removeChild(this.fixedGrid),this.fixedGrid=new PIXI.Graphics,this.fixedGrid.lineStyle(1,4473924,.3);const t=50,i=this.app.screen.width,e=this.app.screen.height;for(let s=-i;s<=i*2;s+=t)this.fixedGrid.moveTo(s,-e),this.fixedGrid.lineTo(s,e*2);for(let s=-e;s<=e*2;s+=t)this.fixedGrid.moveTo(-i,s),this.fixedGrid.lineTo(i*2,s);this.app.stage.addChild(this.fixedGrid)}isObjectVisible(t,i){return t.x>=i.x&&t.x<=i.x+i.width&&t.y>=i.y&&t.y<=i.y+i.height}drawPlayers(){const t=new Set,i=this.getVisibleArea();Object.values(this.gameState.players).forEach(e=>{if(!this.isObjectVisible(e,i))return;const s=e.id;t.add(s);let a=this.playerSprites[s];const o=e.health<=0,n=o?this.deadPlayerTexture:this.playerTexture;if(a){if(a.texture!==n){a.texture=n;const r=n.width||this.playerTexture.width,l=this.playerRadius*2/r;a.scale.set(l),console.log(`Updated texture for player ${s} (alive: ${!o})`)}}else{a=new PIXI.Sprite(n),a.anchor.set(.5);const r=n.width||this.playerTexture.width,l=this.playerRadius*2/r;a.scale.set(l),this.playerSprites[s]=a,this.playersContainer.addChild(a),console.log(`Created player ${s} (${e.username}) in current zone`)}a.x=e.x,a.y=e.y,this.updatePlayerName(e,a),o||(this.handleCollisionEffects(e,a),this.handlePlayerHighlight(e,a))}),Object.keys(this.playerSprites).forEach(e=>{if(!t.has(e)){const s=this.playerSprites[e];this.playersContainer.removeChild(s),delete this.playerSprites[e],console.log(`Removed player ${e} from rendering (left zone)`)}})}updatePlayerName(t,i){let e=i.getChildByName("playerText");const s=t.username||t.id||"Unknown";e?e.text=s:(e=new PIXI.Text(s,{fontFamily:"Arial",fontSize:16,fill:16777215,align:"center",stroke:0,strokeThickness:4,fontWeight:"bold",dropShadow:!0,dropShadowColor:0,dropShadowBlur:4,dropShadowDistance:0}),e.anchor.set(.5),e.name="playerText",e.y=-40,i.addChild(e),console.log(`✅ Created name label for: ${s}`)),t.id===this.gameState.myId?(e.style.fill=65280,e.text=`${s} (You)`):e.style.fill=16777215,e.visible=!0,e.alpha=1,e.renderable=!0,e.scale.set(1/this.zoomLevel)}setupUIContainer(){this.uiContainer=new PIXI.Container,this.app.stage.addChild(this.uiContainer),this.uiContainer.zIndex=1e3}handleCollisionEffects(t,i){let e=i.getChildByName("collisionHighlight");if(t.is_colliding){e||(e=new PIXI.Graphics,e.name="collisionHighlight",i.addChildAt(e,0)),e.clear(),e.lineStyle(4,16711680,.8),e.drawCircle(0,0,this.playerRadius);const s=Math.sin(Date.now()*.02)*.2+1;e.scale.set(s),this.createCollisionParticles(t.x,t.y)}else e&&(e.clear(),e.scale.set(1))}createCollisionParticles(t,i){const e=Date.now();if(!(e-this.lastCollisionTime<this.collisionCooldown)){this.lastCollisionTime=e;for(let s=0;s<8;s++){const a=new PIXI.Graphics;a.beginFill(this.getRandomColor()),a.drawCircle(0,0,3),a.endFill(),a.x=t,a.y=i;const o=Math.random()*Math.PI*2,n=2+Math.random()*3;a.vx=Math.cos(o)*n,a.vy=Math.sin(o)*n,a.life=30,this.playersContainer.addChild(a),this.collisionParticles.push(a)}}}updateCollisionParticles(){for(let t=this.collisionParticles.length-1;t>=0;t--){const i=this.collisionParticles[t];i.x+=i.vx,i.y+=i.vy,i.life--,i.alpha=i.life/30,i.life<=0&&(this.playersContainer.removeChild(i),this.collisionParticles.splice(t,1))}}handlePlayerHighlight(t,i){let e=i.getChildByName("highlight");t.id===this.gameState.myId?(e||(e=new PIXI.Graphics,e.name="highlight",i.addChildAt(e,0)),e.clear(),t.is_colliding?(e.lineStyle(3,16711680),e.drawCircle(0,0,this.playerRadius),e.lineStyle(2,65280),e.drawCircle(0,0,this.playerRadius+3)):(e.lineStyle(3,65280),e.drawCircle(0,0,this.playerRadius))):e&&i.removeChild(e)}getRandomColor(){const t=[16739179,5164484,4569041,9883316,16771751,14524637,10025880,16766720];return t[Math.floor(Math.random()*t.length)]}drawMinimap(t){for(;this.minimapContainer.children.length>1;)this.minimapContainer.removeChildAt(1);const i=240,e=120,s=this.getCurrentZone(t);if(!s)return;const a=new PIXI.Graphics;a.beginFill(s.color,.7),a.drawRect(0,0,i,e),a.endFill(),this.minimapContainer.addChild(a);const o=new PIXI.Text(s.name,{fontFamily:"Arial",fontSize:10,fill:16777215,align:"center",stroke:0,strokeThickness:2});o.anchor.set(.5),o.x=i/2,o.y=10,this.minimapContainer.addChild(o);const n=i/s.width,r=e/s.height,h=this.getVisibleArea();this.portals.forEach(l=>{if(l.zone===s.name.toLowerCase().replace(" zone","")){const c=(l.x-s.x)*n,m=l.y*r,d=new PIXI.Graphics;d.beginFill(16711935),d.drawCircle(c,m,3),d.endFill();const y=new PIXI.Text(l.id,{fontFamily:"Arial",fontSize:8,fill:16777215,align:"center",stroke:0,strokeThickness:1});y.anchor.set(.5),y.x=c,y.y=m-8,this.minimapContainer.addChild(d),this.minimapContainer.addChild(y)}}),Object.values(this.gameState.players).forEach(l=>{if(this.isInZone(l,s)&&this.isObjectVisible(l,h)){const c=(l.x-s.x)*n,m=l.y*r,d=new PIXI.Graphics;l.id===this.gameState.myId?(d.beginFill(65280),d.drawCircle(c,m,4)):(d.beginFill(16711680),d.drawCircle(c,m,3)),d.endFill(),this.minimapContainer.addChild(d)}}),Object.values(this.gameState.mobs).forEach(l=>{if(this.isInZone(l,s)&&this.isObjectVisible(l,h)){const c=(l.x-s.x)*n,m=l.y*r,d=new PIXI.Graphics;d.beginFill(16753920),d.drawCircle(c,m,2),d.endFill(),this.minimapContainer.addChild(d)}})}getCurrentZone(t){if(!t)return null;for(const[i,e]of Object.entries(this.zones))if(t.x>=e.x&&t.x<=e.x+e.width)return e;return this.zones.common}isInZone(t,i){return t.x>=i.x&&t.x<=i.x+i.width&&t.y>=0&&t.y<=i.height}setupMinimap(){this.minimapContainer.x=10,this.minimapContainer.y=10;const s=new PIXI.Graphics;s.beginFill(657946,.8),s.lineStyle(2,0),s.drawRect(0,0,240,120),s.endFill(),this.minimapContainer.addChild(s),this.app.stage.addChild(this.minimapContainer)}resizeApp(){this.app.renderer.resize(window.innerWidth,window.innerHeight)}setupAuthHandlers(){const t=document.getElementById("loginBtn"),i=document.getElementById("registerBtn"),e=document.getElementById("passwordInput"),s=document.getElementById("enterGame");t&&t.addEventListener("click",()=>this.login()),i&&i.addEventListener("click",()=>this.register()),e&&e.addEventListener("keypress",a=>{a.key==="Enter"&&this.login()}),s&&s.addEventListener("click",()=>this.enterGame())}async login(){const t=document.getElementById("usernameInput").value,i=document.getElementById("passwordInput").value;if(!t||!i){this.showAuthMessage("Введите логин и пароль");return}try{const s=await(await fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({login:t,password:i})})).json();s.success?(this.authToken=s.user_id,this.username=t,localStorage.setItem("authToken",this.authToken),localStorage.setItem("username",this.username),this.hideAuth()):this.showAuthMessage("Ошибка входа: "+s.message)}catch(e){this.showAuthMessage("Ошибка соединения: "+e.message)}}async register(){const t=document.getElementById("usernameInput").value,i=document.getElementById("passwordInput").value;if(!t||!i){this.showAuthMessage("Введите логин и пароль");return}try{const s=await(await fetch("/api/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({login:t,password:i})})).json();s.success?(this.showAuthMessage("Регистрация успешна! Теперь войдите."),document.getElementById("passwordInput").value=""):this.showAuthMessage("Ошибка регистрации: "+s.message)}catch(e){this.showAuthMessage("Ошибка соединения: "+e.message)}}showAuthMessage(t){document.getElementById("authMessage").textContent=t}startGameLoop(){this.stopGameLoop();const t=i=>{this.gameLoopFrame=requestAnimationFrame(t),i-this.lastFrameTime>=this.frameTime&&(this.gameLoop(),this.lastFrameTime=i)};this.gameLoopFrame=requestAnimationFrame(t),this.movementInterval=setInterval(()=>{this.handleMovement()},1e3/120)}stopGameLoop(){this.gameLoopFrame&&(cancelAnimationFrame(this.gameLoopFrame),this.gameLoopFrame=null),this.movementInterval&&(clearInterval(this.movementInterval),this.movementInterval=null)}setupControls(){document.addEventListener("keydown",t=>{["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," ","w","a","s","d","ц","ф","ы","в"].includes(t.key)&&t.preventDefault(),this.keys[t.key.toLowerCase()]=!0}),document.addEventListener("keyup",t=>{this.keys[t.key.toLowerCase()]=!1}),window.addEventListener("blur",()=>{this.keys={}})}enterGame(){if(this.ws&&this.ws.readyState===WebSocket.OPEN){console.log("Already connected to game server");return}if(!this.authToken){this.showAuth();return}document.getElementById("main-menu").style.display="none",document.getElementById("game-container").style.display="block",this.startGameLoop(),this.setupWorldVisuals();const t=`ws://localhost:8080/ws?token=${this.authToken}`;this.ws=new WebSocket(t),this.ws.onmessage=i=>{try{const e=JSON.parse(i.data);if(e.type==="error"){e.message.includes("auth")&&this.handleAuthError(),alert("Connection rejected: "+e.message),this.ws.close();return}this.handleGameMessage(e)}catch(e){console.error("Error parsing game message:",e)}},this.ws.onopen=()=>{console.log("Connected to game server");const i=document.querySelector(".connection-status");i&&(i.textContent="Connected",i.className="connection-status connected")},this.ws.onclose=()=>{console.log("Disconnected from game server");const i=document.querySelector(".connection-status");i&&(i.textContent="Disconnected",i.className="connection-status disconnected");const e=document.getElementById("loadingOverlay");document.getElementById("game-container").style.display="none",this.hideDebugInfo(),e&&(e.classList.remove("hidden"),e.style.display="flex"),setTimeout(()=>{e&&(e.classList.add("hidden"),setTimeout(()=>{e.parentNode&&(e.style.display="none"),document.getElementById("main-menu").style.display="flex",document.getElementById("enterGame").style.display="flex"},400))},1e3),this.keepAliveInterval&&(clearInterval(this.keepAliveInterval),this.keepAliveInterval=null)},this.ws.onerror=i=>{console.error("WebSocket error:",i);const e=document.querySelector(".connection-status");e&&(e.textContent="Connection Error",e.className="connection-status disconnected")},this.keepAliveInterval=setInterval(()=>{this.ws&&this.ws.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"ping"}))},3e4)}handleAuthError(){localStorage.removeItem("authToken"),localStorage.removeItem("username"),this.authToken=null,this.username=null,this.showAuth(),document.getElementById("main-menu").style.display="none",document.getElementById("game-container").style.display="none",this.hideDebugInfo(),this.showAuthMessage("Ошибка аутентификации. Войдите снова.")}showAuth(){document.getElementById("authOverlay").style.display="flex",document.getElementById("main-menu").style.display="none"}hideAuth(){document.getElementById("authOverlay").style.display="none",document.getElementById("main-menu").style.display="flex"}debugServerData(t){t.type==="state"&&t.players&&(console.group("🔍 Server Player Data Debug"),Object.entries(t.players).forEach(([i,e])=>{console.log(`Player ${i}:`,{hasUsername:!!e.username,username:e.username,x:e.x,y:e.y,zone:e.currentZone})}),console.groupEnd())}handleGameMessage(t){switch(this.diagnostics.wsMessagesReceived++,t.type){case"state":this.diagnostics.stateUpdateCount++,this.diagnostics.lastStateUpdate=Date.now(),this.diagnostics.lastPlayersCount=Object.keys(t.players||{}).length,this.diagnostics.lastMobsCount=Object.keys(t.mobs||{}).length,(t.yourZone===void 0||t.yourZone===null)&&(console.warn("⚠️ Server sent undefined zone, using common as fallback"),t.yourZone="common"),t.players&&Object.keys(t.players).forEach(s=>{if(t.players[s]&&!t.players[s].username)if(s===t.yourId&&this.username)t.players[s].username=this.username;else{const a=this.gameState.players[s];t.players[s].username=(a==null?void 0:a.username)||`Player_${s.substring(0,4)}`}}),this.gameState.players=t.players,this.gameState.myId=t.yourId,this.gameState.mobs=t.mobs||{},this.gameState.petalDrops=t.petalDrops||{},this.gameState.worldWidth=t.worldWidth||7e3,this.gameState.worldHeight=t.worldHeight||1e3;const i=this.gameState.players[this.gameState.myId];i?(i.currentZone||(i.currentZone=t.yourZone||"common"),i&&t.petals&&(i.petals=t.petals)):console.warn("❌ My player not found in game state!"),this.updateMobPositionsForInterpolation(),t.yourZone&&this.updateZoneDisplay(t.yourZone),this.showDebugInfo(),document.getElementById("enterGame").style.display="none",this.updateUI();break;case"player_joined":if(t.data&&t.data.player){const s=t.data.player;s.id&&s.username&&(this.gameState.players[s.id]=s,console.log(`🆕 Player joined: ${s.username}`))}break;case"player_left":t.data&&t.data.playerId&&(delete this.gameState.players[t.data.playerId],console.log(`🚪 Player left: ${t.data.playerId}`));break;case"collision":this.handleCollisionMessage(t.data);break;case"pong":break;case"damage_taken":this.handleDamageTaken(t.data);break;case"player_died":this.handlePlayerDeath(t.data);break;case"mob_killed":this.handleMobKilled(t.data);break;case"player_respawned":this.handlePlayerRespawned(t.data);break;case"portal_teleport":this.handlePortalTeleport(t.data);const e=this.gameState.players[this.gameState.myId];e&&this.drawMinimap(e);break;case"petal_drop_created":this.handlePetalDropCreated(t.data);break;case"petal_picked_up":this.handlePetalPickedUp(t.data);break;case"petal_destroyed":this.handlePetalDestroyed(t.data);break;case"petal_respawned":this.handlePetalRespawned(t.data);break;case"petal_healed":this.handlePetalHealed(t.data);break;case"mob_killed_by_petal":this.handleMobKilledByPetal(t.data);break}}handlePetalDropCreated(t){const{id:i,type:e,x:s,y:a}=t;this.showPetalDropNotification(e,s,a),console.log(`🎯 Petal drop created: ${e} at (${s}, ${a})`)}handlePetalPickedUp(t){const{type:i}=t;this.showNotification(`Picked up ${i} petal!`,65280),navigator.vibrate&&navigator.vibrate(100)}handlePetalDestroyed(t){const{petal_id:i,type:e}=t;this.showNotification(`${e} petal destroyed! Respawning in 2s...`,16711680)}handlePetalRespawned(t){const{petal_id:i,type:e}=t;this.showNotification(`${e} petal respawned!`,65280)}handlePetalHealed(t){const{petal_id:i,amount:e,health:s}=t;this.showHealEffect(e),console.log(`❤️ Petal healed ${e} health. Total: ${s}`)}handleMobKilledByPetal(t){const{mob_type:i,petal_type:e}=t;this.showNotification(`Your ${e} petal killed a ${i}!`,16776960)}showPetalDropNotification(t,i,e){const a={wolf:"#FF69B4",goblin:"#00FF00",orc:"#FF4500"}[t]||"#FFFFFF",o=document.createElement("div");o.innerHTML=`✨ <span style="color: ${a}">${t}</span> petal dropped!`,o.style.cssText=`
        position: fixed;
        top: 200px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        z-index: 1000;
        font-family: Arial, sans-serif;
        font-weight: bold;
    `,document.body.appendChild(o),setTimeout(()=>{document.body.contains(o)&&document.body.removeChild(o)},3e3)}showHealEffect(t){const i=document.createElement("div");i.textContent=`+${t} ❤️`,i.style.cssText=`
        position: fixed;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #00FF00;
        font-size: 24px;
        font-weight: bold;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        z-index: 1000;
        pointer-events: none;
        animation: floatHeal 2s ease-out forwards;
    `;const e=document.createElement("style");e.textContent=`
        @keyframes floatHeal {
            0% { opacity: 1; transform: translate(-50%, -50%); }
            100% { opacity: 0; transform: translate(-50%, -100%); }
        }
    `,document.head.appendChild(e),document.body.appendChild(i),setTimeout(()=>{document.body.removeChild(i),document.head.removeChild(e)},2e3)}handleDamageTaken(t){const{damage:i,health:e,max_health:s}=t;this.health=e,this.maxHealth=s;const a=this.gameState.players[this.gameState.myId];a&&(a.health=e,a.max_health=s),this.showDamageNotification(i),this.updateHealthBar(e,s),navigator.vibrate&&navigator.vibrate(50),console.log(`💔 Damage taken: ${i}, Health: ${e}/${s}`)}handlePlayerDeath(t){this.controlsEnabled=!1,this.showDeathScreen(),console.log("☠️ Player died!")}handleMobKilled(t){const{mob_type:i,rarity:e,xp:s}=t;this.showKillNotification(i,e,s),console.log(`🎯 Mob killed: ${i} (${e}), XP: ${s}`)}handlePlayerRespawned(t){const{health:i,x:e,y:s,zone:a}=t;this.controlsEnabled=!0,this.hideDeathScreen(),this.health=i,this.maxHealth=100;const o=this.gameState.players[this.gameState.myId];o&&(o.x=e,o.y=s,o.currentZone=a,o.health=i),this.updateHealthBar(i,100),console.log(`🔁 Player respawned at (${e}, ${s}) in ${a} zone`)}showDamageNotification(t){const i=document.createElement("div");i.textContent=`-${t}`,i.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: #ff4444;
            font-size: 24px;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            z-index: 1000;
            pointer-events: none;
            animation: floatUp 1s ease-out forwards;
        `;const e=document.createElement("style");e.textContent=`
            @keyframes floatUp {
                0% { opacity: 1; transform: translate(-50%, -50%); }
                100% { opacity: 0; transform: translate(-50%, -100%); }
            }
        `,document.head.appendChild(e),document.body.appendChild(i),setTimeout(()=>{document.body.removeChild(i),document.head.removeChild(e)},1e3)}showDeathScreen(){let t=document.getElementById("death-screen");t||(t=document.createElement("div"),t.id="death-screen",t.innerHTML=`
                <div style="
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0, 0, 0, 0.8);
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    z-index: 9999;
                    color: white;
                    font-family: Arial, sans-serif;
                ">
                    <h1 style="color: #ff4444; font-size: 48px; margin-bottom: 20px;">☠️ YOU DIED</h1>
                    <p style="font-size: 24px; margin-bottom: 30px;">Press RESPAWN to continue</p>
                    <button id="respawn-btn" style="
                        padding: 15px 30px;
                        font-size: 20px;
                        background: #4CAF50;
                        color: white;
                        border: none;
                        border-radius: 5px;
                        cursor: pointer;
                    ">RESPAWN</button>
                </div>
            `,document.body.appendChild(t),document.getElementById("respawn-btn").addEventListener("click",()=>{this.sendRespawnRequest()})),t.style.display="flex"}hideDeathScreen(){const t=document.getElementById("death-screen");t&&(t.style.display="none")}sendRespawnRequest(){this.ws&&this.ws.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"respawn"}))}showKillNotification(t,i,e){const a={common:"#ffffff",uncommon:"#00ff00",rare:"#0088ff",epic:"#ff00ff",legendary:"#ffaa00"}[i]||"#ffffff",o=document.createElement("div");o.innerHTML=`🎯 <span style="color: ${a}">${t}</span> +${e}XP`,o.style.cssText=`
            position: fixed;
            top: 20%;
            right: 20px;
            color: white;
            font-size: 16px;
            font-weight: bold;
            background: rgba(0,0,0,0.7);
            padding: 10px;
            border-radius: 5px;
            z-index: 1000;
            pointer-events: none;
            animation: slideLeft 2s ease-out forwards;
        `;const n=document.createElement("style");n.textContent=`
            @keyframes slideLeft {
                0% { opacity: 1; transform: translateX(0); }
                70% { opacity: 1; transform: translateX(-10px); }
                100% { opacity: 0; transform: translateX(-100px); }
            }
        `,document.head.appendChild(n),document.body.appendChild(o),setTimeout(()=>{document.body.contains(o)&&document.body.removeChild(o),document.head.removeChild(n)},2e3)}checkPixiContainers(){var t,i,e,s,a;console.group("🔍 Pixi Containers Check"),console.log("World container children:",(t=this.worldContainer)==null?void 0:t.children.length),console.log("Players container children:",(i=this.playersContainer)==null?void 0:i.children.length),console.log("Mobs container children:",(e=this.mobsContainer)==null?void 0:e.children.length),console.log("Portals container children:",(s=this.portalsContainer)==null?void 0:s.children.length),console.log("Minimap container children:",(a=this.minimapContainer)==null?void 0:a.children.length),console.groupEnd()}updateMobPositionsForInterpolation(){const t=Date.now();this.lastServerUpdate=t;const i=.1;Object.values(this.gameState.mobs).forEach(e=>{const s=e.id;if(!this.mobInterpolationData[s])this.mobInterpolationData[s]={startX:e.x,startY:e.y,targetX:e.x,targetY:e.y,startTime:t,duration:100,lastTargetX:e.x,lastTargetY:e.y};else{const a=this.mobInterpolationData[s],o=Math.abs(e.x-a.lastTargetX),n=Math.abs(e.y-a.lastTargetY);(o>i||n>i)&&(a.startX=this.mobSprites[s]?this.mobSprites[s].x:a.targetX,a.startY=this.mobSprites[s]?this.mobSprites[s].y:a.targetY,a.targetX=e.x,a.targetY=e.y,a.startTime=t),a.lastTargetX=e.x,a.lastTargetY=e.y}})}updateZoneDisplay(t){const i=document.querySelector(".zone-indicator");if(!i)return;const e={common:"Common Zone",uncommon:"Uncommon Zone",rare:"Rare Zone",epic:"Epic Zone",legendary:"Legendary Zone"};i.textContent=e[t]||"Unknown Zone";const s={common:"#666666",uncommon:"#00FF00",rare:"#0088FF",epic:"#FF00FF",legendary:"#FFAA00"};i.style.backgroundColor=s[t]||"rgba(0, 0, 0, 0.8)"}handlePortalTeleport(t){const{fromZone:i,toZone:e}=t;e&&this.updateZoneDisplay(e),this.showPortalNotification(`Teleported from ${i||"unknown"} to ${e}!`),console.log(`Portal teleport: ${i} -> ${e}`)}showPortalNotification(t){let i=document.getElementById("portal-notification");i||(i=document.createElement("div"),i.id="portal-notification",i.style.cssText=`
            position: fixed;
            top: 100px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 1000;
            font-family: Arial, sans-serif;
        `,document.body.appendChild(i)),i.textContent=t,i.style.display="block",setTimeout(()=>{i.style.display="none"},3e3)}showDebugInfo(){document.getElementById("debug-info").style.display="block"}hideDebugInfo(){document.getElementById("debug-info").style.display="none"}updateUI(){const t=this.gameState.players[this.gameState.myId];if(t){document.getElementById("coordinates").textContent=`Your coordinates: ${Math.round(t.x)}, ${Math.round(t.y)}`,document.getElementById("playerCount").textContent=Object.keys(this.gameState.players).length;const i=Object.keys(this.gameState.mobs).length;let e=document.getElementById("mobInfo");e||(e=document.createElement("div"),e.id="mobInfo",document.getElementById("debug-info").appendChild(e)),e.textContent=`Mobs: ${i}`,this.username&&(document.getElementById("playerId").textContent=this.username)}}handleMovement(){if(!this.controlsEnabled||!this.ws||this.ws.readyState!==WebSocket.OPEN||!this.gameState.myId)return;let t=0,i=0;const e=5;(this.keys.arrowup||this.keys.w||this.keys.ц)&&(i=-e),(this.keys.arrowdown||this.keys.s||this.keys.ы)&&(i=e),(this.keys.arrowleft||this.keys.a||this.keys.ф)&&(t=-e),(this.keys.arrowright||this.keys.d||this.keys.в)&&(t=e),t!==0&&i!==0&&(t*=.707,i*=.707),(t!==0||i!==0)&&this.ws.send(JSON.stringify({type:"move",data:{dx:t,dy:i}}))}gameLoop(){try{this.updateCollisionParticles(),this.drawWorld(),Date.now()%5e3<16&&this.debugPlayerTextRendering(),Date.now()%1e4<16&&this.checkPixiContainers()}catch(t){console.error("❌ Error in game loop:",t)}}debugPlayerTextRendering(){console.group("🔍 Player Text Rendering Debug"),Object.entries(this.playerSprites).forEach(([t,i])=>{const e=i.getChildByName("playerText"),s=this.gameState.players[t];console.log(`Player ${t} (${s==null?void 0:s.username}):`,{hasText:!!e,textVisible:e==null?void 0:e.visible,textAlpha:e==null?void 0:e.alpha,textContent:e==null?void 0:e.text,spriteVisible:i.visible,spriteAlpha:i.alpha})}),console.groupEnd()}handleCollisionMessage(t){const{with_player:i,impact:e}=t;this.showCollisionNotification(`Collision with ${i}!`),navigator.vibrate&&navigator.vibrate(100)}showCollisionNotification(t){let i=document.getElementById("collision-notification");i||(i=document.createElement("div"),i.id="collision-notification",i.style.cssText=`
                position: fixed;
                top: 150px;
                left: 50%;
                transform: translateX(-50%);
                background: rgba(255, 0, 0, 0.8);
                color: white;
                padding: 10px 20px;
                border-radius: 5px;
                z-index: 1000;
                font-family: Arial, sans-serif;
                font-weight: bold;
                text-shadow: 1px 1px 2px black;
            `,document.body.appendChild(i)),i.textContent=t,i.style.display="block",setTimeout(()=>{i.style.display="none"},2e3)}drawWorld(){const t=this.gameState.players[this.gameState.myId];if(!t)return;this.worldContainer.scale.set(this.zoomLevel);const i=this.getCurrentZone(t);if(i){const e=this.app.screen.width/this.zoomLevel,s=this.app.screen.height/this.zoomLevel;let a=-t.x*this.zoomLevel+this.app.screen.width/2,o=-t.y*this.zoomLevel+this.app.screen.height/2;const n=-i.x-i.width+e,r=-i.x,h=-i.height+s,l=0;let p=a,c=o;e<=i.width?p=Math.min(Math.max(a,n),r):p=(n+r)/2,s<=i.height?c=Math.min(Math.max(o,h),l):c=(h+l)/2,this.camera.x=p,this.camera.y=c,this.worldContainer.x=this.camera.x,this.worldContainer.y=this.camera.y}else this.camera.x=-t.x*this.zoomLevel+this.app.screen.width/2,this.camera.y=-t.y*this.zoomLevel+this.app.screen.height/2,this.worldContainer.x=this.camera.x,this.worldContainer.y=this.camera.y;this.drawWorldSquare(),this.drawPlayers(),this.updatePlayerOverlays(),this.drawMobs(),this.drawPetalDrops(),this.drawPetals(),this.drawMinimap(t)}destroy(){this.stopGameLoop(),this.keepAliveInterval&&clearInterval(this.keepAliveInterval),this.ws&&this.ws.close(),this.app&&this.app.destroy(!0)}async loadMobTextures(){const t={goblin:{color:65280,features:"big_ears"},orc:{color:16711680,features:"tusks"},wolf:{color:8947848,features:"pointed_ears"}},i=20;for(const[e,s]of Object.entries(t)){const a=new PIXI.Graphics;switch(a.beginFill(s.color),a.drawCircle(0,0,i),a.endFill(),a.beginFill(0),s.features){case"big_ears":a.drawEllipse(-18,-12,6,12),a.drawEllipse(18,-12,6,12);break;case"tusks":a.drawRect(-14,8,6,10),a.drawRect(8,8,6,10);break;case"pointed_ears":a.drawPolygon([-18,-18,-12,-6,-8,-18]),a.drawPolygon([18,-18,12,-6,8,-18]);break}a.endFill(),this.mobTextures[e]=this.app.renderer.generateTexture(a)}}drawMobs(){const t=new Set,i=this.getVisibleArea(),e=Date.now();Object.values(this.gameState.mobs).forEach(s=>{if(!this.isObjectVisible(s,i))return;const a=s.id;t.add(a);let o=this.mobSprites[a];if(!o){const l=this.mobTextures[s.type]||this.createDefaultMobTexture(s.type);o=new PIXI.Sprite(l),o.anchor.set(.5),this.mobSprites[a]=o,this.mobsContainer.addChild(o),this.mobInterpolationData[a]={startX:s.x,startY:s.y,targetX:s.x,targetY:s.y,startTime:e,duration:100},console.log(`Created mob ${a} of type ${s.type} with rarity ${s.rarity}`)}const r=(s.radius||20)/20;o.scale.set(r);const h=this.mobInterpolationData[a];if(h){const l=e-h.startTime,p=Math.min(l/h.duration,1),c=1-Math.pow(1-p,3);o.x=h.startX+(h.targetX-h.startX)*c,o.y=h.startY+(h.targetY-h.startY)*c}else o.x=s.x,o.y=s.y;this.drawMobHealthBar(s,o),this.drawMobRarity(s,o)}),Object.keys(this.mobSprites).forEach(s=>{if(!t.has(s)){const a=this.mobSprites[s];this.mobsContainer.removeChild(a),delete this.mobSprites[s],delete this.mobInterpolationData[s],console.log(`Removed mob ${s} from rendering (left zone)`)}})}drawMobRarity(t,i){let e=i.getChildByName("rarityText");e||(e=new PIXI.Text("",{fontFamily:"Arial",fontSize:10,fill:16777215,align:"center",stroke:0,strokeThickness:2}),e.anchor.set(.5),e.name="rarityText",e.y=25,i.addChild(e));const s=this.getRarityConfig(t.rarity);e.text=s.displayName,e.style.fill=s.color,t.rarity==="legendary"&&this.addLegendaryEffects(i)}getRarityConfig(t){const i={common:{displayName:"Common",color:8947848},uncommon:{displayName:"Uncommon",color:65280},rare:{displayName:"Rare",color:35071},epic:{displayName:"Epic",color:16711935},legendary:{displayName:"LEGENDARY",color:16755200}};return i[t]||i.common}addLegendaryEffects(t){let i=t.getChildByName("legendaryGlow");if(!i){i=new PIXI.Graphics,i.name="legendaryGlow",t.addChildAt(i,0);const e=()=>{if(!t.parent)return;const s=Date.now()*.002,a=Math.sin(s)*.3+.7;i.clear(),i.lineStyle(4*a,16755200,.6),i.drawCircle(0,0,25),requestAnimationFrame(e)};e()}}createDefaultMobTexture(t){const i=new PIXI.Graphics,e=20,s=this.getMobColor(t);i.beginFill(s),i.drawCircle(0,0,e),i.endFill();const a=new PIXI.Text(t.charAt(0).toUpperCase(),{fontFamily:"Arial",fontSize:12,fill:16777215,align:"center"});return a.anchor.set(.5),i.addChild(a),this.app.renderer.generateTexture(i)}getMobColor(t){const i={goblin:65280,orc:16711680,wolf:8947848,default:16776960};return i[t]||i.default}drawMobHealthBar(t,i){let e=i.getChildByName("healthBar"),s=i.getChildByName("healthBackground");s||(s=new PIXI.Graphics,s.name="healthBackground",i.addChild(s)),e||(e=new PIXI.Graphics,e.name="healthBar",i.addChild(e));const a=40,o=6,n=-30;s.clear(),s.beginFill(0),s.drawRect(-a/2,n,a,o),s.endFill(),e.clear();const r=t.health/t.max_health;let h=65280;r<.3?h=16711680:r<.6&&(h=16776960),e.beginFill(h),e.drawRect(-a/2,n,a*r,o),e.endFill()}updateHealthBar(t,i){const e=document.getElementById("health-bar"),s=document.getElementById("health-text");if(e&&s){const a=t/i*100;e.style.width=a+"%",s.textContent=`${t}/${i}`,a>70?e.style.background="#4CAF50":a>30?e.style.background="#FF9800":e.style.background="#F44336"}}async loadPetalTextures(){try{console.log("🔄 Loading petal textures...");const t={wolf:{color:16738740,shape:"circle"},goblin:{color:65280,shape:"triangle"},orc:{color:16729344,shape:"square"}};this.petalTextures||(this.petalTextures={},console.log("✅ Initialized petalTextures object"));for(const[i,e]of Object.entries(t)){const s=new PIXI.Graphics;switch(s.beginFill(e.color),e.shape){case"circle":s.drawCircle(0,0,8);break;case"triangle":s.drawPolygon([-8,8,8,8,0,-8]);break;case"square":s.drawRect(-6,-6,12,12);break}s.endFill(),this.petalTextures[i]=this.app.renderer.generateTexture(s),console.log(`✅ Loaded texture for ${i} petal`)}console.log("🎉 All petal textures loaded successfully")}catch(t){console.error("❌ Error loading petal textures:",t),this.createFallbackPetalTextures()}}createFallbackPetalTextures(){console.log("🔄 Creating fallback petal textures...");const t={wolf:16738740,goblin:65280,orc:16729344};for(const[i,e]of Object.entries(t)){const s=new PIXI.Graphics;s.beginFill(e),s.drawCircle(0,0,8),s.endFill(),this.petalTextures[i]=this.app.renderer.generateTexture(s)}console.log("✅ Fallback petal textures created")}drawPetals(){const t=this.getVisibleArea(),i=new Set;Object.values(this.gameState.players).forEach(e=>{e.petals&&Object.values(e.petals).forEach(s=>{if(s.health<=0||!this.isObjectVisible(s,t))return;const a=`${e.id}_${s.id}`;i.add(a);let o=this.petalSprites[a];if(!o){const n=this.petalTextures[s.type]||this.createDefaultPetalTexture(s.type);o=new PIXI.Sprite(n),o.anchor.set(.5);const r={wolf:.8,goblin:.7,orc:1};o.scale.set(r[s.type]||.8),this.petalsContainer.addChild(o),this.petalSprites[a]=o,console.log(`✅ Created petal ${a} for player ${e.username}`)}o.x=s.x,o.y=s.y,o.visible=s.is_active})}),Object.keys(this.petalSprites).forEach(e=>{if(!i.has(e)){const s=this.petalSprites[e];this.petalsContainer.removeChild(s),delete this.petalSprites[e],console.log(`🗑️ Removed petal ${e}`)}})}drawPetalDrops(){const t=new Set;this.gameState.petalDrops&&Object.values(this.gameState.petalDrops).forEach(i=>{const e=i.id;t.add(e);let s=this.petalDropSprites[e];if(!s){const a=this.petalTextures[i.type];s=new PIXI.Sprite(a),s.anchor.set(.5),this.animatePetalDrop(s),this.petalDropContainer.addChild(s),this.petalDropSprites[e]=s}s.x=i.x,s.y=i.y}),Object.keys(this.petalDropSprites).forEach(i=>{if(!t.has(i)){const e=this.petalDropSprites[i];this.petalDropContainer.removeChild(e),delete this.petalDropSprites[i]}})}animatePetalDrop(t){const i=Date.now(),e=()=>{if(!t.parent)return;const s=(Date.now()-i)*.001,a=1+Math.sin(s*3)*.2,o=.7+Math.sin(s*2)*.3;t.scale.set(a),t.alpha=o,requestAnimationFrame(e)};e()}addPetalGlow(t,i){let e=i.getChildByName("glow");if(!e){e=new PIXI.Graphics,e.name="glow",i.addChildAt(e,0);const s=()=>{if(!i.parent)return;const a=Date.now()*.002,o=Math.sin(a)*.3+.7;e.clear();let n,r;switch(t.type){case"wolf":n=16738740,r=12;break;case"goblin":n=65280,r=10;break;case"orc":n=16729344,r=14;break}e.lineStyle(2*o,n,.6),e.drawCircle(0,0,r),requestAnimationFrame(s)};s()}}}window.addEventListener("load",async()=>{try{const g=new C;await g.init(),window.gameClient=g}catch(g){console.error("❌ Failed to start game:",g),alert("Failed to load the game. Please refresh the page.")}});window.addEventListener("beforeunload",()=>{window.gameClient&&window.gameClient.destroy()});
